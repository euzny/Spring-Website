/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-06-10 01:26:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin_005fmain;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>대시보드</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("/*style.css*/\n");
      out.write("@charset \"utf-8\";\n");
      out.write("*{\n");
      out.write("	margin:0;\n");
      out.write("	padding:0;\n");
      out.write("	list-style:none;\n");
      out.write("	font-family:\"malgun gothic\";\n");
      out.write("	box-sizing:border-box;\n");
      out.write("}\n");
      out.write("a{text-decoration:none;color:inherit;}\n");
      out.write(".clear{clear:both;}\n");
      out.write("#container{background-color:#fff;width:1000px;}\n");
      out.write("\n");
      out.write("/*v1*/\n");
      out.write("#nav-v1{width:150px;text-align:center;}\n");
      out.write(".menu-v1{\n");
      out.write("	line-height:2;\n");
      out.write("	border:1px solid #222;\n");
      out.write("}\n");
      out.write(".menu-v1:hover{background-color:#000;}\n");
      out.write(".menu-v1:hover>a{color:white;font-weight:bold;}\n");
      out.write(".menu-v1 .submenu{\n");
      out.write("	margin-top:7px;\n");
      out.write("	background-color:#fff;\n");
      out.write("	display:none;\n");
      out.write("}\n");
      out.write(".menu-v1 .submenu li:hover{\n");
      out.write("	background-color:#000;color:white;font-weight:bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"js/admin.js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div id=\"container\">\n");
      out.write("		<!--세로형 1-->\n");
      out.write("		<br><p>세로형 메뉴바 1유형 : 드롭다운</p><br>\n");
      out.write("		<ul id=\"nav-v1\">\n");
      out.write("			<li class=\"menu-v1\"><a href=\"#\">menu-1</a>\n");
      out.write("				<ul class=\"submenu\">\n");
      out.write("					<li><a href=\"#\">SubMenu 1</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 2</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 3</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 4</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</li>\n");
      out.write("			<li class=\"menu-v1\"><a href=\"#\">menu-2</a>\n");
      out.write("				<ul class=\"submenu\">\n");
      out.write("					<li><a href=\"#\">SubMenu 1</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 2</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 3</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 4</a></li>\n");
      out.write("				</ul>				\n");
      out.write("			</li>\n");
      out.write("			<li class=\"menu-v1\"><a href=\"#\">menu-3</a>\n");
      out.write("				<ul class=\"submenu\">\n");
      out.write("					<li><a href=\"#\">SubMenu 1</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 2</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 3</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 4</a></li>\n");
      out.write("				</ul>				\n");
      out.write("			</li>\n");
      out.write("			<li class=\"menu-v1\"><a href=\"#\">menu-4</a>\n");
      out.write("				<ul class=\"submenu\">\n");
      out.write("					<li><a href=\"#\">SubMenu 1</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 2</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 3</a></li>\n");
      out.write("					<li><a href=\"#\">SubMenu 4</a></li>\n");
      out.write("				</ul>				\n");
      out.write("			</li>\n");
      out.write("		</ul>\n");
      out.write("		<div class=\"clear\"></div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("			\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
