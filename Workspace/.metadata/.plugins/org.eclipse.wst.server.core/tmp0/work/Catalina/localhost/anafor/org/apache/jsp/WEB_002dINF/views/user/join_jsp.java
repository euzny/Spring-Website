/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-06-23 03:11:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원가입</title>\n");
      out.write("<script type=\"text/javascript\" src=\"js/join-check.js\"></script>\n");
      out.write("<style>\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	.Anaforcenter{\n");
      out.write("		margin:0px auto;\n");
      out.write("		width:60%;\n");
      out.write("		height:auto;\n");
      out.write("		pointer-events:auto;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	#AnaforLogo{\n");
      out.write("		margin : 40px 40px 30px 40px;\n");
      out.write("	}\n");
      out.write("	#AnaforLogo #alogo{\n");
      out.write("		width:242px;\n");
      out.write("		height:90px;\n");
      out.write("		color:#696AAD;\n");
      out.write("		letter-spacing:-0.015em;\n");
      out.write("		font-size:42px;\n");
      out.write("		font-weight:800;\n");
      out.write("		font-style:normal; \n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	#AnaforLogo #alogotitle{\n");
      out.write("		width:100px;\n");
      out.write("		height:26px;\n");
      out.write("		color:#696AAD;\n");
      out.write("		letter-spacing:-0.015em;\n");
      out.write("		font-weight:600;\n");
      out.write("		font-size:12px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	input[type=text], input[type=password]{\n");
      out.write("		width:500px;\n");
      out.write("		height:50px;\n");
      out.write("		margin:10px 0px 0px 0px;\n");
      out.write("		border-radius:10px;\n");
      out.write("		padding: 0px 20px;\n");
      out.write("		border:1px solid #ccc;\n");
      out.write("		line-height:50px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	input[type=button]{\n");
      out.write("		width:100px;\n");
      out.write("		height:50px;\n");
      out.write("		color:#696AAD;\n");
      out.write("		background: white;\n");
      out.write("		font-weight:600;\n");
      out.write("		border-radius:10px;\n");
      out.write("		border:1px solid #ccc;\n");
      out.write("		margin:10px 0px 0px 0px;\n");
      out.write("\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	input[type=button]:hover{\n");
      out.write("		cursor:pointer;\n");
      out.write("		border:1px solid #696AAD;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	input[type=text]:focus, input[type=password]:focus{\n");
      out.write("		border:2px solid #696AAD;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	#noticejoin{\n");
      out.write("		width:100%;\n");
      out.write("		height:20px;\n");
      out.write("		text-align:center;\n");
      out.write("		margin-bottom:10px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	#notice{\n");
      out.write("		width:500px;\n");
      out.write("		text-align:left;\n");
      out.write("		display:inline-block;\n");
      out.write("		font-size:14px;\n");
      out.write("		color:#696AAD;\n");
      out.write("		font-weight:500;\n");
      out.write("		height:14px;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	#useremail input[type=text], #usercode input[type=text]{\n");
      out.write("		width:400px;\n");
      out.write("	}\n");
      out.write("	#input[type=radio]{\n");
      out.write("	    background-color: initial;\n");
      out.write("		cursor: default;\n");
      out.write("		appearance:auto;\n");
      out.write("		box-sizing: border-box;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	#usergender #selectbox{\n");
      out.write("		width:500px;\n");
      out.write("		height:40px;\n");
      out.write("		margin:10px auto 0px auto;\n");
      out.write("		padding: 0px 7px 0px 12px;\n");
      out.write("		text-align:left;\n");
      out.write("	}\n");
      out.write("	#selectbox ul{\n");
      out.write("		display:block;\n");
      out.write("		width:100%;\n");
      out.write("		height:40px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	#selectbox ul li{\n");
      out.write("		display:block;\n");
      out.write("		width:50%;\n");
      out.write("		float:left;\n");
      out.write("		padding-right: 80px;\n");
      out.write("		line-height:25px;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	label{\n");
      out.write("		font-size:15px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	#idmsg, #codemsg,#pwmsg,#pwmsg2,#namemsg,#telmsg,#genmsg,#birthmsg{\n");
      out.write("		width:500px;\n");
      out.write("		text-align:left;\n");
      out.write("		display:inline-block;\n");
      out.write("		font-size:13px;\n");
      out.write("		font-weight:500;\n");
      out.write("		padding:5px;\n");
      out.write("	}\n");
      out.write("	#btn-join{\n");
      out.write("		display:inline-block;\n");
      out.write("		width:500px;\n");
      out.write("		height:50px;\n");
      out.write("		background-color: #696AAD;\n");
      out.write("		border-radius:10px;\n");
      out.write("		text-align:center;\n");
      out.write("		font-size:20px;\n");
      out.write("		color:#FFFFFF;\n");
      out.write("		font-weight:400;\n");
      out.write("		padding:3px 7px;\n");
      out.write("		border:0px;\n");
      out.write("		line-height:45px;\n");
      out.write("	}\n");
      out.write("	#joinbutton{\n");
      out.write("		width:100%;\n");
      out.write("		height:170px;\n");
      out.write("		margin:15px 0px 0px 0px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.visible{\n");
      out.write("		visibility: visible;\n");
      out.write("	}\n");
      out.write("	.hidden{\n");
      out.write("		visibility: hidden;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.valid{color:green;}\n");
      out.write("	.invalid{color:red;}\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div id=\"AnaforLogo\">\n");
      out.write("		<span id=\"alogo\">AnaFor</span><br/>\n");
      out.write("		<span id=\"alogotitle\">아나플 나를 위해 아나포</span>\n");
      out.write("	</div>	\n");
      out.write("<form action=\"userjoinChk\" method=\"post\"> \n");
      out.write("	<div class=\"Anaforcenter\">\n");
      out.write("		<div id=\"noticejoin\">\n");
      out.write("		<span id=\"notice\">* 필수 입력사항</span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"useremail\">\n");
      out.write("			<input type=\"text\" name=\"user_id\" class=\"chk\" placeholder=\"이메일을 입력하세요 *\" maxlength=\"100\"/>\n");
      out.write("			<input type=\"button\" id=\"btn-email\" onclick=\"checkEmail()\" value=\"중복확인\"/><br/>\n");
      out.write("			<span id=\"idmsg\">예)happy@anafor.com</span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"usercode\">\n");
      out.write("			<input type=\"text\" name=\"code\" placeholder=\"인증코드를 입력하세요 *\"/>\n");
      out.write("			<input type=\"button\" id=\"btn-code\" onclick=\"sendEmailCode()\"value=\"이메일 인증\"/><br/>\n");
      out.write("			<span id=\"codemsg\">이메일 인증코드를 받고 입력하세요</span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"userpw\">\n");
      out.write("			<input type=\"password\" name=\"user_pw\" class=\"chk\" placeholder=\"비밀번호 *\"/><br/>\n");
      out.write("			<span id=\"pwmsg\">8~16자 이내로 영문 대/소문자와 숫자를 포함하여 입력해주세요</span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"userpwchk\">\n");
      out.write("			<input type=\"password\" name=\"pwchk\" class=\"chk\"  placeholder=\"비밀번호 확인*\"/><br/>\n");
      out.write("			<span id=\"pwmsg2\"></span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"username\">\n");
      out.write("			<input type=\"text\" name=\"user_name\" class=\"chk\"  placeholder=\"이름 *\" maxlength=\"10\"/><br/>\n");
      out.write("			<span id=\"namemsg\"></span>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<div id=\"userbirth\">\n");
      out.write("			<input type=\"text\" name=\"user_birth\" class=\"chk\" placeholder=\"생년월일을 입력하세요 *\"/><br/>\n");
      out.write("			<span id=\"birthmsg\">예)19990101</span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"userphone\">\n");
      out.write("			<input type=\"text\" name=\"user_tel\" class=\"chk\" placeholder=\"휴대폰 번호 *\"/><br/>\n");
      out.write("			<span id=\"telmsg\">'-'없이 번호만 입력 예)01012345678</span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"usergender\">\n");
      out.write("			<div id=\"selectbox\" >\n");
      out.write("				<ul>\n");
      out.write("				<li><label><input type=\"radio\" name=\"user_gender\" value=\"남\" checked/>&nbsp;&nbsp;남</label></li>\n");
      out.write("				<li><label><input type=\"radio\"  name=\"user_gender\"  value=\"여\"/>&nbsp;&nbsp;여</label></li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("			<span id=\"genmsg\"></span>\n");
      out.write("		</div>\n");
      out.write("		<div id=\"joinbutton\">\n");
      out.write("			<a id=\"btn-join\" onclick=\"go_join()\">가입하기</a>\n");
      out.write("		</div>\n");
      out.write("	</div>	\n");
      out.write("</form> \n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var code=\"\"  //인증코드 받을 변수\n");
      out.write("function go_join(){\n");
      out.write("\n");
      out.write("		//이메일 중복확인 검사\n");
      out.write("		if($('[name=user_id]').hasClass('checked')){\n");
      out.write("			//중복확인 검사를 했을 경우\n");
      out.write("			if($('[name=user_id]').siblings('span').hasClass('invalid')){\n");
      out.write("				$('[name=user_id]').siblings('span').text(join.id.unUsable.desc);\n");
      out.write("				$('[name=user_id]').focus();\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("		}else{\n");
      out.write("			//중복확인을 안 했을 경우\n");
      out.write("			if(!item_check($('[name=user_id]'))) return;   \n");
      out.write("			else{\n");
      out.write("				$('[name=user_id]').siblings('span').text(join.id.valid.desc); // 사용할 수 있는 id여도 중복확인을 안 했을 경우\n");
      out.write("				$('[name=user_id]').focus();\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		//비밀번호 , 비밀번호 확인, 이름, 생일, 전화번호 검증 필요\n");
      out.write("		if(!item_check($('[name=user_pw]')))	return;\n");
      out.write("		if(!item_check($('[name=pwchk]'))) return;\n");
      out.write("		if(!item_check($('[name=user_name]'))) return;\n");
      out.write("		if(!item_check($('[name=user_birth]'))) return;\n");
      out.write("		if(!item_check($('[name=user_tel]')))	return;\n");
      out.write("		\n");
      out.write("		//인증코드 검증\n");
      out.write("		if($('#codemsg').hasClass('invalid')|| $('[name=code]').val()==''){\n");
      out.write("			$('[name=code]').focus();\n");
      out.write("			if(code!=''){\n");
      out.write("				$('#codemsg').text(\"인증코드를 입력해주세요\").removeClass().addClass('invalid');\n");
      out.write("			}else{\n");
      out.write("				$('#codemsg').text(\"인증코드를 먼저 받아주세요\").removeClass().addClass('invalid');\n");
      out.write("			}\n");
      out.write("			return;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		alert(\"회원가입이 완료되었습니다!\\n 로그인 페이지로 이동합니다.\");\n");
      out.write("		$('form').submit();\n");
      out.write("		\n");
      out.write("}//go_join\n");
      out.write("\n");
      out.write("\n");
      out.write("$('.chk').on('keyup', function (e) {\n");
      out.write("	//id 입력 후 enter를 누르면 아이디 중복확인 버튼 실행\n");
      out.write("	if($(this).attr('name') == 'id'){\n");
      out.write("		if(e.keyCode == 13){\n");
      out.write("			checkEmail();\n");
      out.write("		}\n");
      out.write("	} \n");
      out.write("	var data = join.tag_status($(this)); //입력하고 있는 tag의 값을 보낸 후 결과값 반환\n");
      out.write("	$(this).siblings('span').text(data.desc).removeClass().addClass(data.code);\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("function item_check(item){\n");
      out.write("	var data = join.tag_status(item);\n");
      out.write("	if(data.code == 'invalid') {\n");
      out.write("		item.siblings('span').text(data.desc).removeClass().addClass(data.code);\n");
      out.write("		item.focus();\n");
      out.write("		return false;\n");
      out.write("	}\n");
      out.write("	return true;\n");
      out.write("}\n");
      out.write("\n");
      out.write("//이메일 인증 코드 전송 함수\n");
      out.write("function sendEmailCode(){\n");
      out.write("	if($('#idmsg').hasClass('invalid')){\n");
      out.write("		$(\"#codemsg\").text(\"유효하지 않은 이메일입니다. 이메일을 다시 작성해주세요\").removeClass().addClass(\"invalid\");\n");
      out.write("		return;\n");
      out.write("	}else if($('[name=user_id]').val()==''){\n");
      out.write("		$(\"#codemsg\").text(\"이메일을 먼저 작성해주세요\").removeClass().addClass(\"invalid\");\n");
      out.write("		$('[name=user_id]').focus();\n");
      out.write("		return;\n");
      out.write("	}else if($('[name=user_id]').hasClass('checked')){\n");
      out.write("		//중복확인 검사를 했을 경우\n");
      out.write("		if($('[name=user_id]').siblings('span').hasClass('invalid')){\n");
      out.write("			$('[name=user_id]').siblings('span').text(join.id.unUsable.desc);\n");
      out.write("			$('[name=user_id]').focus();\n");
      out.write("			return;\n");
      out.write("		}\n");
      out.write("	}else if(!$('[name=user_id]').hasClass('checked')){\n");
      out.write("		//중복확인을 안 했을 경우\n");
      out.write("		if(!item_check($('[name=user_id]'))) return;   \n");
      out.write("		else{\n");
      out.write("			$('[name=user_id]').siblings('span').text(join.id.valid.desc); // 사용할 수 있는 id여도 중복확인을 안 했을 경우\n");
      out.write("			$('[name=user_id]').focus();\n");
      out.write("			return;\n");
      out.write("		}\n");
      out.write("	} \n");
      out.write("	\n");
      out.write("	$.ajax({\n");
      out.write("		url:'sendEmailChk',\n");
      out.write("		data:{email:$('[name=user_id]').val()},\n");
      out.write("		success:function(response){\n");
      out.write("				alert(\"인증메일이 발송되었습니다.\\n해당 메일함을 확인해주세요\");\n");
      out.write("				code=response;\n");
      out.write("				console.log(code);\n");
      out.write("		},error:function(req,text){\n");
      out.write("				alert(text+':'+req.status);\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("		});//ajax\n");
      out.write("}\n");
      out.write(" \n");
      out.write(" $('[name=code]').keyup(function() {\n");
      out.write("	 matchCode();\n");
      out.write("});\n");
      out.write(" \n");
      out.write("\n");
      out.write(" //인증코드 일치 여부 확인\n");
      out.write(" function matchCode(){\n");
      out.write("	 \n");
      out.write("	 if(code!=\"\"){\n");
      out.write("		if($('[name=code]').val() == code){\n");
      out.write("				$('#codemsg').text(\"인증코드가 일치합니다.\").removeClass().addClass('valid');\n");
      out.write("			}else{\n");
      out.write("				$('#codemsg').text(\"인증코드가 일치하지 않습니다.\").removeClass().addClass('invalid');\n");
      out.write("		}\n");
      out.write("	 }else{\n");
      out.write("		 $('#codemsg').text(\"인증코드를 먼저 받아주세요\").removeClass().addClass('invalid');\n");
      out.write("	 }\n");
      out.write(" }\n");
      out.write("\n");
      out.write("\n");
      out.write("//이메일 중복 확인\n");
      out.write("function checkEmail(){\n");
      out.write("	\n");
      out.write("	var data = join.tag_status($('[name=user_id]'));\n");
      out.write("	if(data.code==\"invalid\"){\n");
      out.write("		$('[name=user_id]').siblings('span').text(data.desc);\n");
      out.write("		$('[name=user_id]').focus();\n");
      out.write("		return;\n");
      out.write("	}\n");
      out.write("		\n");
      out.write("	$.ajax({					//ajax 통신\n");
      out.write("		url: 'userEmailChk',\n");
      out.write("		data : {id:$('[name=user_id]').val()},\n");
      out.write("		success : function(response){\n");
      out.write("				var data = join.id_usable(response);\n");
      out.write("				$('[name=user_id]').siblings('span').text(data.desc).removeClass().addClass(data.code);\n");
      out.write("				$('[name=user_id]').addClass('checked');\n");
      out.write("		}, error : function(req,text){\n");
      out.write("			alert(text+' : '+req.status);\n");
      out.write("		}\n");
      out.write("	});//ajax\n");
      out.write("\n");
      out.write("}//checkEmail()\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
